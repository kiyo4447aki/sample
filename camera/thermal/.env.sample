# =========================
# UVC (カメラ取り込み)
# =========================
# 画像サイズ（ピクセル）
FRAME_W=160
FRAME_H=120
# フレームレート（fps）
FPS=9
# FFC（フラットフィールド補正）を何秒間隔で試行するか。0で無効
FFC_INTERVAL_SEC=0

# =========================
# 検知ロジック（Detector）
# =========================
# 絶対温度しきい値 [℃]（これ以上ならホット候補）
ABS_THRESH_C=65
# 周囲との差分しきい値 [℃]（周囲中央値 + 差分以上ならホット候補）
DELTA_THRESH_C=18
# ホット領域の最小面積（ピクセル数）
MIN_BLOB_PIX=40
# 連続してこのフレーム数以上ホットなら「検知」とみなす
PERSIST_FRAMES=3
# 検知後、次の通報までのクールダウン秒数
COOLDOWN_SEC=30
# ROI（検知対象矩形）"x,y,w,h"。空なら全画面
ROI_RECT=

# =========================
# レンダリング（可視化）
# =========================
# カラーマップの温度レンジ [℃]
CMAP_MIN_C=0
CMAP_MAX_C=120
# JPEG 品質（0-100）
JPEG_QUALITY=90

# =========================
# バックエンド連携
# =========================
# デバイスID（サーバ側で識別に使用）
DEVICE_ID=unknown
# 画像アップロードの予約API
UPLOADS_API_URL=https://api.example.com/uploads
# 通知（アラート）API
ALERTS_API_URL=https://api.example.com/alerts
# 認証API（トークン取得など）
AUTH_API_URL=https://api.example.com/auth
# 認証用クライアントID/パスワード（デバイス資格情報）
AUTH_ID=
AUTH_PASSWORD=

# =========================
# スプーラー（送信失敗時のローカル退避）
# =========================
# 退避ディレクトリ
SPOOL_DIR=/var/lib/thermalwatcher/spool
# 退避ファイル合計サイズ上限（バイト）
MAX_SPOOL_BYTES=209715200
# 再接続のバックオフ上限（秒）
RECONNECT_MAX_SEC=60

# =========================
# ログ
# =========================
# ログ出力先ファイルパス
LOG_FILE=/var/log/thermalwatcher.log
# ログレベル（DEBUG/INFO/WARN/ERROR）
LOG_LEVEL=INFO
